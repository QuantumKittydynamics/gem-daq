#!/bin/bash
#
# gemwebdaq	Starts up the gemwebdaq server daemon
#
# chkconfig: 25 99 01
# description: web-daq is a javascript based node application interfacing
#              to the GEM DAQ hardware
#              This service starts up the web-daq server daemon.
#
# processname: gemwebdaq

### BEGIN INIT INFO
# Provides: gemwebdaq
# Default-Start: 3 5
# Default-Stop: 0 1 6
# Short-Description: Starts up the gemwebdaq server daemon
# description: web-daq is a javascript based node application interfacing
#              to the GEM DAQ hardware
#              This service starts up the web-daq server daemon.
#
### END INIT INFO

WEBDAQROOT=/data/bigdisk/users/sturdy/software/gem-daq/web-daq

export HOME=$WEBDAQROOT

# Default LD_LIBRARY_PATH
# Can be overridden in the package .conf files
#
LD_LIBRARY_PATH=${WEBDAQROOT}/lib

nodeinstance=$(eval "printf 'app_slot%02d.js' '$2'")
nodeproc=$(eval "printf 'slot%02d' '$2'")
nodepid=$(ps -ef|fgrep node|fgrep $nodeinstance|awk '{print $2}')

start() {

    if [ -n "$nodepid" ]
    then
	echo "#######################################################"
	echo "web-daq on $nodeproc is running with pid $nodepid"
	echo "Stop first, or restart!"
	echo "#######################################################"
    else
	cd ${WEBDAQROOT}
	logfile=$(eval "printf '/var/log/gemdaq/web-daq/slot%02d.out' '$1'")
	cmd=$(eval "printf 'node app_slot%02d.js >& $logfile&\n' '$1'")

	echo "#######################################################"
	echo "starting web-daq on $nodeproc and logging to $logfile"
	echo "su - gemuser -c $cmd"
	echo "#######################################################"
	su - gemuser -c $cmd
    fi
}

stop() {
    echo 
    if [ -n "$nodepid" ]
    then
	echo "#######################################################"
	echo "killing web-daq on $nodeproc is running with pid $nodepid"
	echo "su - gemuser -c kill $nodepid"
	echo "#######################################################"
	su - gemuser -c kill $nodepid
    else                
	echo "#######################################################"
	echo "web-daq on $nodeproc is not running"
	echo "#######################################################"
    fi
}

restart() {
    stop $1
    start $1
}

status() {
    if [ -n "$nodepid" ]
    then
	echo "#######################################################"
	echo "web-daq on $nodeproc is running with pid $nodepid"
	echo "#######################################################"
    else                
	echo "#######################################################"
	echo "web-daq on $nodeproc is not running"
	echo "#######################################################"
    fi
}

info() {
    nodepids=$(ps -ef|fgrep node|fgrep slot|awk '{print $1 " " $2 " " $9}')
    if [ -n "$nodepids" ]
    then
	echo "#######################################################"
	echo "Currently running web-daq processes:"
	for ((i=0;i<${#nodepids[*]};i++)); do
	    echo "${nodepids[$i]}"
	done
	echo "#######################################################"
    else                
	echo "#######################################################"
	echo "No web-daq process is running"
	echo "#######################################################"
    fi
}

case "$1" in
    'start')
	start $2
	;;
    'stop')
	stop $2
	;;
    'restart')
	restart $2
	;;
    'status')
	status $2
	;;
    'info')
	info
	;;
    *)
    # usage
	echo "Usage: $0 start|stop|restart|status <slot number>"
	;;
esac

