#!/bin/bash
#
# gemwebdaq	Starts up the gemwebdaq server daemon
#
# chkconfig: 25 99 01
# description: web-daq is a javascript based node application interfacing
#              to the GEM DAQ hardware
#              This service starts up the web-daq server daemon.
#
# processname: gemwebdaq

### BEGIN INIT INFO
# Provides: gemwebdaq
# Default-Start: 3 5
# Default-Stop: 0 1 6
# Short-Description: Starts up the gemwebdaq server daemon
# description: web-daq is a javascript based node application interfacing
#              to the GEM DAQ hardware
#              This service starts up the web-daq server daemon.
#
### END INIT INFO

WEBDAQROOT=/data/bigdisk/users/sturdy/software/gem-daq/web-daq

export HOME=$WEBDAQROOT

# Default LD_LIBRARY_PATH
# Can be overridden in the package .conf files
#
LD_LIBRARY_PATH=${WEBDAQROOT}/lib

start() {
    cd ${WEBDAQROOT}
    logfile=$(eval "printf '/var/log/gemdaq/web-daq/slot%02d.out' '$1'")
    nodeproc=$(eval "printf 'slot%02d' '$1'")
    cmd=$(eval "printf 'node app_slot%02d.js >& $logfile&\n' '$1'")
    echo "starting web-daq on $nodeproc and logging to $logfile"
    echo "$cmd"
    $(eval $cmd)
}

stop() {
    nodeinstance="printf 'app_slot%02d.js' '$1'"
    nodeproc="printf 'slot%02d' '$1'"
    nodepid=$(ps aux www|fgrep node|fgrep $(eval $nodeinstance)|awk '{print $2}')
    echo 
    if [ -n "$nodepid" ]
    then
	echo "killing web-daq on $(eval $nodeproc) is running with pid $nodepid"
	kill $nodepid
    else                
	echo "web-daq on $(eval $nodeproc) is not running"
    fi
}

restart() {
    stop $1
    start $1
}

status() {
    nodeinstance="printf 'app_slot%02d.js' '$1'"
    nodeproc="printf 'slot%02d' '$1'"
    nodepid=$(ps aux www|fgrep node|fgrep $(eval $nodeinstance)|awk '{print $2}')

    if [ -n "$nodepid" ]
    then
	echo "web-daq on $(eval $nodeproc) is running with pid $nodepid"
    else                
	echo "web-daq on $(eval $nodeproc) is not running"
    fi
}

case "$1" in
    'start')
	start $2
	;;
    'stop')
	stop $2
	;;
    'restart')
	restart $2
	;;
    'status')
	status $2
	;;
    *)
    # usage
	echo "Usage: $0 start|stop|restart|status <slot number>"
	;;
esac

